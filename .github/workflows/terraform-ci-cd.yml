name: 'Terraform CI/CD with Destroy'

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:  # Allows manual triggering for the destroy job

permissions:
  contents: write  # Changed to write to allow auto-formatting commits

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: '1.5.0'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: |
        terraform fmt
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        if [[ -n $(git status --porcelain) ]]; then
          git add -A
          git commit -m "chore: format terraform files"
          git push
        fi

    - name: Terraform Plan
      run: terraform plan -var 'db_password=${{ secrets.DB_PASSWORD }}' -var 'key_name=${{ secrets.KEY_NAME }}'

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve -var 'db_password=${{ secrets.DB_PASSWORD }}' -var 'key_name=${{ secrets.KEY_NAME }}'

    timeout-minutes: 30  # Increase timeout as needed

  destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: '1.5.0'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Destroy
      run: terraform destroy -auto-approve -var 'db_password=${{ secrets.DB_PASSWORD }}' -var 'key_name=${{ secrets.KEY_NAME }}'
